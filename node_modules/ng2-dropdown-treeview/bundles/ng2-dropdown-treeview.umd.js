(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@angular/core"), require("lodash"), require("@angular/common"), require("@angular/forms"));
	else if(typeof define === 'function' && define.amd)
		define(["@angular/core", "lodash", "@angular/common", "@angular/forms"], factory);
	else if(typeof exports === 'object')
		exports["ng2-dropdown-treeview"] = factory(require("@angular/core"), require("lodash"), require("@angular/common"), require("@angular/forms"));
	else
		root["ng2-dropdown-treeview"] = factory(root["ng"]["core"], root["_"], root["ng"]["common"], root["ng"]["forms"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 14);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TreeviewConfig; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var TreeviewConfig = (function () {
    function TreeviewConfig() {
        this.isShowAllCheckBox = true;
        this.isShowFilter = false;
        this.isShowCollapseExpand = false;
        this.maxHeight = 500;
    }
    return TreeviewConfig;
}());
TreeviewConfig = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])()
], TreeviewConfig);



/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TreeviewI18n; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return TreeviewI18nDefault; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var TreeviewI18n = (function () {
    function TreeviewI18n() {
    }
    return TreeviewI18n;
}());
TreeviewI18n = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])()
], TreeviewI18n);

var TreeviewI18nDefault = (function (_super) {
    __extends(TreeviewI18nDefault, _super);
    function TreeviewI18nDefault() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TreeviewI18nDefault.prototype.getText = function (checkededItems, isAll) {
        if (isAll) {
            return 'All';
        }
        switch (checkededItems.length) {
            case 0:
                return 'Select options';
            case 1:
                return checkededItems[0].text;
            default:
                return checkededItems.length + " options selected";
        }
    };
    TreeviewI18nDefault.prototype.allCheckboxText = function () {
        return 'All';
    };
    TreeviewI18nDefault.prototype.filterPlaceholder = function () {
        return 'Filter';
    };
    TreeviewI18nDefault.prototype.filterNoItemsFoundText = function () {
        return 'No items found';
    };
    TreeviewI18nDefault.prototype.tooltipCollapseExpand = function (isCollapse) {
        return isCollapse ? 'Expand' : 'Collapse';
    };
    return TreeviewI18nDefault;
}(TreeviewI18n));
TreeviewI18nDefault = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])()
], TreeviewI18nDefault);



/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TreeviewItem; });

var TreeviewItem = (function () {
    function TreeviewItem(item, autoCorrectChecked) {
        if (autoCorrectChecked === void 0) { autoCorrectChecked = false; }
        var _this = this;
        this.internalDisabled = false;
        this.internalChecked = true;
        this.internalCollapsed = false;
        if (__WEBPACK_IMPORTED_MODULE_0_lodash__["isNil"](item)) {
            throw new Error('Item must be defined');
        }
        if (__WEBPACK_IMPORTED_MODULE_0_lodash__["isString"](item.text)) {
            this.text = item.text;
        }
        else {
            throw new Error('A text of item must be string object');
        }
        this.value = item.value;
        if (__WEBPACK_IMPORTED_MODULE_0_lodash__["isBoolean"](item.disabled)) {
            this.disabled = item.disabled;
        }
        if (__WEBPACK_IMPORTED_MODULE_0_lodash__["isBoolean"](item.checked)) {
            this.checked = item.checked;
        }
        if (__WEBPACK_IMPORTED_MODULE_0_lodash__["isBoolean"](item.collapsed)) {
            this.collapsed = item.collapsed;
        }
        if (this.disabled === true && this.checked === false) {
            throw new Error('A disabled item must be checked');
        }
        if (!__WEBPACK_IMPORTED_MODULE_0_lodash__["isNil"](item.children)) {
            this.children = item.children.map(function (child) {
                if (_this.disabled === true) {
                    child.disabled = true;
                }
                return new TreeviewItem(child);
            });
        }
        if (autoCorrectChecked) {
            this.correctChecked();
        }
    }
    Object.defineProperty(TreeviewItem.prototype, "checked", {
        get: function () {
            return this.internalChecked;
        },
        set: function (value) {
            if (__WEBPACK_IMPORTED_MODULE_0_lodash__["isBoolean"](value) && this.internalChecked !== value) {
                if (!this.internalDisabled) {
                    this.internalChecked = value;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    TreeviewItem.prototype.setCheckedRecursive = function (value) {
        if (__WEBPACK_IMPORTED_MODULE_0_lodash__["isBoolean"](value)) {
            if (!this.internalDisabled) {
                this.internalChecked = value;
                if (!__WEBPACK_IMPORTED_MODULE_0_lodash__["isNil"](this.internalChildren)) {
                    this.internalChildren.forEach(function (child) { return child.setCheckedRecursive(value); });
                }
            }
        }
    };
    Object.defineProperty(TreeviewItem.prototype, "disabled", {
        get: function () {
            return this.internalDisabled;
        },
        set: function (value) {
            if (__WEBPACK_IMPORTED_MODULE_0_lodash__["isBoolean"](value) && this.internalDisabled !== value) {
                this.internalDisabled = value;
                if (!__WEBPACK_IMPORTED_MODULE_0_lodash__["isNil"](this.internalChildren)) {
                    this.internalChildren.forEach(function (child) { return child.disabled = value; });
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeviewItem.prototype, "collapsed", {
        get: function () {
            return this.internalCollapsed;
        },
        set: function (collapsed) {
            if (__WEBPACK_IMPORTED_MODULE_0_lodash__["isBoolean"](collapsed) && this.internalCollapsed !== collapsed) {
                this.internalCollapsed = collapsed;
            }
        },
        enumerable: true,
        configurable: true
    });
    TreeviewItem.prototype.setCollapsedRecursive = function (value) {
        if (__WEBPACK_IMPORTED_MODULE_0_lodash__["isBoolean"](value)) {
            this.internalCollapsed = value;
            if (!__WEBPACK_IMPORTED_MODULE_0_lodash__["isNil"](this.internalChildren)) {
                this.internalChildren.forEach(function (child) { return child.setCollapsedRecursive(value); });
            }
        }
    };
    Object.defineProperty(TreeviewItem.prototype, "children", {
        get: function () {
            return this.internalChildren;
        },
        set: function (value) {
            if (this.internalChildren !== value) {
                if (__WEBPACK_IMPORTED_MODULE_0_lodash__["isArray"](value) && value.length === 0) {
                    throw new Error('Children must be not an empty array');
                }
                this.internalChildren = value;
                if (!__WEBPACK_IMPORTED_MODULE_0_lodash__["isNil"](this.internalChildren)) {
                    var checked_1 = true;
                    this.internalChildren.forEach(function (child) {
                        if (child.checked === false) {
                            checked_1 = false;
                        }
                    });
                    this.internalChecked = checked_1;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    TreeviewItem.prototype.getCheckedItems = function () {
        var checkedItems = [];
        if (__WEBPACK_IMPORTED_MODULE_0_lodash__["isNil"](this.internalChildren)) {
            if (this.internalChecked) {
                checkedItems.push(this);
            }
        }
        else {
            var childCount = this.internalChildren.length;
            for (var i = 0; i < childCount; i++) {
                checkedItems = __WEBPACK_IMPORTED_MODULE_0_lodash__["concat"](checkedItems, this.internalChildren[i].getCheckedItems());
            }
        }
        return checkedItems;
    };
    TreeviewItem.prototype.correctChecked = function () {
        this.internalChecked = this.getCorrectChecked();
    };
    TreeviewItem.prototype.getCorrectChecked = function () {
        var checked = this.checked;
        if (!__WEBPACK_IMPORTED_MODULE_0_lodash__["isNil"](this.internalChildren)) {
            checked = true;
            var childCount = this.internalChildren.length;
            for (var i = 0; i < childCount; i++) {
                var child = this.internalChildren[i];
                child.internalChecked = child.getCorrectChecked();
                if (!child.internalChecked) {
                    checked = false;
                    break;
                }
            }
        }
        return checked;
    };
    return TreeviewItem;
}());



/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TreeviewEventParser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return DefaultTreeviewEventParser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return DownlineTreeviewEventParser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return OrderDownlineTreeviewEventParser; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var TreeviewEventParser = (function () {
    function TreeviewEventParser() {
    }
    return TreeviewEventParser;
}());
TreeviewEventParser = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])()
], TreeviewEventParser);

var DefaultTreeviewEventParser = (function (_super) {
    __extends(DefaultTreeviewEventParser, _super);
    function DefaultTreeviewEventParser() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DefaultTreeviewEventParser.prototype.getSelectedChange = function (component) {
        var checkedItems = component.checkedItems;
        if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](checkedItems)) {
            return checkedItems.map(function (item) { return item.value; });
        }
        return [];
    };
    return DefaultTreeviewEventParser;
}(TreeviewEventParser));
DefaultTreeviewEventParser = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])()
], DefaultTreeviewEventParser);

var DownlineTreeviewEventParser = (function (_super) {
    __extends(DownlineTreeviewEventParser, _super);
    function DownlineTreeviewEventParser() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DownlineTreeviewEventParser.prototype.getSelectedChange = function (component) {
        var _this = this;
        var items = component.items;
        if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](items)) {
            var result_1 = [];
            items.forEach(function (item) {
                var links = _this.getLinks(item, null);
                if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](links)) {
                    result_1 = result_1.concat(links);
                }
            });
            return result_1;
        }
        return [];
    };
    DownlineTreeviewEventParser.prototype.getLinks = function (item, parent) {
        var _this = this;
        if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](item.children)) {
            var link_1 = {
                item: item,
                parent: parent
            };
            var result_2 = [];
            item.children.forEach(function (child) {
                var links = _this.getLinks(child, link_1);
                if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](links)) {
                    result_2 = result_2.concat(links);
                }
            });
            return result_2;
        }
        if (item.checked) {
            return [{
                    item: item,
                    parent: parent
                }];
        }
        return null;
    };
    return DownlineTreeviewEventParser;
}(TreeviewEventParser));
DownlineTreeviewEventParser = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])()
], DownlineTreeviewEventParser);

var OrderDownlineTreeviewEventParser = (function (_super) {
    __extends(OrderDownlineTreeviewEventParser, _super);
    function OrderDownlineTreeviewEventParser() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.currentDownlines = [];
        _this.parser = new DownlineTreeviewEventParser();
        return _this;
    }
    OrderDownlineTreeviewEventParser.prototype.getSelectedChange = function (component) {
        var newDownlines = this.parser.getSelectedChange(component);
        if (this.currentDownlines.length === 0) {
            this.currentDownlines = newDownlines;
        }
        else {
            var intersectDownlines_1 = [];
            this.currentDownlines.forEach(function (downline) {
                var foundIndex = -1;
                var length = newDownlines.length;
                for (var i = 0; i < length; i++) {
                    if (downline.item.value === newDownlines[i].item.value) {
                        foundIndex = i;
                    }
                }
                if (foundIndex !== -1) {
                    intersectDownlines_1.push(newDownlines[foundIndex]);
                    newDownlines.splice(foundIndex, 1);
                }
            });
            this.currentDownlines = intersectDownlines_1.concat(newDownlines);
        }
        return this.currentDownlines;
    };
    return OrderDownlineTreeviewEventParser;
}(TreeviewEventParser));
OrderDownlineTreeviewEventParser = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])()
], OrderDownlineTreeviewEventParser);



/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__treeview_i18n__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__treeview_item__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__treeview_config__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__treeview_event_parser__ = __webpack_require__(5);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TreeviewComponent; });
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var FilterTreeviewItem = (function (_super) {
    __extends(FilterTreeviewItem, _super);
    function FilterTreeviewItem(item) {
        var _this = _super.call(this, {
            text: item.text,
            value: item.value,
            disabled: item.disabled,
            checked: item.checked,
            collapsed: item.collapsed,
            children: item.children
        }) || this;
        _this.refItem = item;
        return _this;
    }
    FilterTreeviewItem.prototype.updateRefChecked = function () {
        if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](this.children)) {
            this.children.forEach(function (child) {
                if (child instanceof FilterTreeviewItem) {
                    child.updateRefChecked();
                }
            });
        }
        var refChecked = this.checked;
        if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](this.refItem.children)) {
            for (var i = 0; i < this.refItem.children.length; i++) {
                var refChild = this.refItem.children[i];
                if (refChild instanceof FilterTreeviewItem) {
                    refChild.updateRefChecked();
                }
                if (!refChild.checked) {
                    refChecked = false;
                    break;
                }
            }
        }
        this.refItem.checked = refChecked;
    };
    return FilterTreeviewItem;
}(__WEBPACK_IMPORTED_MODULE_3__treeview_item__["a" /* TreeviewItem */]));
var TreeviewComponent = (function () {
    function TreeviewComponent(i18n, defaultConfig, eventParser) {
        this.i18n = i18n;
        this.defaultConfig = defaultConfig;
        this.eventParser = eventParser;
        this.selectedChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.config = this.defaultConfig;
        this.allItem = new __WEBPACK_IMPORTED_MODULE_3__treeview_item__["a" /* TreeviewItem */]({ text: 'All', value: undefined });
    }
    Object.defineProperty(TreeviewComponent.prototype, "hasItems", {
        get: function () {
            return !__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](this.items) && this.items.length > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeviewComponent.prototype, "hasFilterItems", {
        get: function () {
            return !__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](this.filterItems) && this.filterItems.length > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeviewComponent.prototype, "maxHeight", {
        get: function () {
            return "" + this.config.maxHeight;
        },
        enumerable: true,
        configurable: true
    });
    TreeviewComponent.prototype.ngOnChanges = function (changes) {
        var itemsSimpleChange = changes['items'];
        if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](itemsSimpleChange)) {
            this.updateFilterItems();
            this.updateCollapsedAll();
            this.raiseSelectedChange();
        }
    };
    TreeviewComponent.prototype.toggleCollapseExpand = function () {
        var _this = this;
        this.allItem.collapsed = !this.allItem.collapsed;
        if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](this.filterItems)) {
            this.filterItems.forEach(function (item) { return item.setCollapsedRecursive(_this.allItem.collapsed); });
        }
    };
    TreeviewComponent.prototype.onFilterTextChange = function () {
        this.updateFilterItems();
    };
    TreeviewComponent.prototype.onAllCheckedChange = function (checked) {
        this.filterItems.forEach(function (item) {
            item.setCheckedRecursive(checked);
            if (item instanceof FilterTreeviewItem) {
                item.updateRefChecked();
            }
        });
        this.raiseSelectedChange();
    };
    TreeviewComponent.prototype.onItemCheckedChange = function (item, checked) {
        if (this.allItem.checked !== checked) {
            var allItemChecked = true;
            for (var i = 0; i < this.filterItems.length; i++) {
                if (!this.filterItems[i].checked) {
                    allItemChecked = false;
                    break;
                }
            }
            if (this.allItem.checked !== allItemChecked) {
                this.allItem.checked = allItemChecked;
            }
        }
        if (item instanceof FilterTreeviewItem) {
            item.updateRefChecked();
        }
        this.raiseSelectedChange();
    };
    TreeviewComponent.prototype.raiseSelectedChange = function () {
        this.checkedItems = this.getCheckedItems();
        var values = this.eventParser.getSelectedChange(this);
        this.selectedChange.emit(values);
    };
    TreeviewComponent.prototype.getCheckedItems = function () {
        var checkedItems = [];
        if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](this.items)) {
            for (var i = 0; i < this.items.length; i++) {
                checkedItems = __WEBPACK_IMPORTED_MODULE_1_lodash__["concat"](checkedItems, this.items[i].getCheckedItems());
            }
        }
        return checkedItems;
    };
    TreeviewComponent.prototype.updateFilterItems = function () {
        var _this = this;
        if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](this.items) && __WEBPACK_IMPORTED_MODULE_1_lodash__["isString"](this.filterText) && this.filterText !== '') {
            var filterItems_1 = [];
            var filterText_1 = this.filterText.toLowerCase();
            this.items.forEach(function (item) {
                var newItem = _this.filterItem(item, filterText_1);
                if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](newItem)) {
                    filterItems_1.push(newItem);
                }
            });
            this.filterItems = filterItems_1;
        }
        else {
            this.filterItems = this.items;
        }
        this.updateCheckedAll();
    };
    TreeviewComponent.prototype.filterItem = function (item, filterText) {
        var _this = this;
        var isMatch = __WEBPACK_IMPORTED_MODULE_1_lodash__["includes"](item.text.toLowerCase(), filterText);
        if (isMatch) {
            return item;
        }
        else {
            if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](item.children)) {
                var children_1 = [];
                var checkedCount_1 = 0;
                if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](item.children)) {
                    item.children.forEach(function (child) {
                        var newChild = _this.filterItem(child, filterText);
                        if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](newChild)) {
                            children_1.push(newChild);
                            if (newChild.checked) {
                                checkedCount_1++;
                            }
                        }
                    });
                    if (children_1.length > 0) {
                        var newItem = new FilterTreeviewItem(item);
                        newItem.children = children_1;
                        return newItem;
                    }
                }
            }
        }
        return undefined;
    };
    TreeviewComponent.prototype.updateCheckedAll = function () {
        if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](this.filterItems)) {
            var hasItemUnchecked = false;
            for (var i = 0; i < this.filterItems.length; i++) {
                if (!this.filterItems[i].checked) {
                    hasItemUnchecked = true;
                    break;
                }
            }
            if (this.allItem.checked === hasItemUnchecked) {
                this.allItem.checked = !hasItemUnchecked;
            }
        }
    };
    TreeviewComponent.prototype.updateCollapsedAll = function () {
        var hasItemExpanded = false;
        if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](this.filterItems)) {
            for (var i = 0; i < this.filterItems.length; i++) {
                if (!this.filterItems[i].collapsed) {
                    hasItemExpanded = true;
                    break;
                }
            }
        }
        this.allItem.collapsed = !hasItemExpanded;
    };
    return TreeviewComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["TemplateRef"])
], TreeviewComponent.prototype, "template", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Array)
], TreeviewComponent.prototype, "items", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__treeview_config__["a" /* TreeviewConfig */])
], TreeviewComponent.prototype, "config", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], TreeviewComponent.prototype, "selectedChange", void 0);
TreeviewComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'leo-treeview',
        template: "\n<template #tpl let-item=\"item\"\n    let-toggleCollapseExpand=\"toggleCollapseExpand\"\n    let-onCheckedChange=\"onCheckedChange\">\n    <div class=\"form-check\">\n        <i *ngIf=\"item.children\" (click)=\"toggleCollapseExpand()\" aria-hidden=\"true\"\n            class=\"fa\" [class.fa-caret-right]=\"item.collapsed\" [class.fa-caret-down]=\"!item.collapsed\"></i>\n        <label class=\"form-check-label\">\n            <input type=\"checkbox\" class=\"form-check-input\"\n                [(ngModel)]=\"item.checked\" (ngModelChange)=\"onCheckedChange()\" [disabled]=\"item.disabled\" />\n            {{item.text}}\n        </label>\n    </div>\n</template>\n<div class=\"treeview-header\">\n    <div *ngIf=\"config.isShowFilter\" class=\"row\">\n        <div class=\"col-12\">\n            <input class=\"form-control\" type=\"text\" [placeholder]=\"i18n.filterPlaceholder()\"\n                [(ngModel)]=\"filterText\" (ngModelChange)=\"onFilterTextChange()\" />\n        </div>\n    </div>\n    <div *ngIf=\"hasFilterItems\">\n        <div *ngIf=\"config.isShowAllCheckBox || config.isShowCollapseExpand\" class=\"row\">\n            <div class=\"col-12\" [class.row-margin]=\"config.isShowFilter && (config.isShowAllCheckBox || config.isShowCollapseExpand)\">\n                <label *ngIf=\"config.isShowAllCheckBox\" class=\"form-check-label label-item-all\">\n                    <input type=\"checkbox\" class=\"form-check-input\"\n                        [(ngModel)]=\"allItem.checked\" (ngModelChange)=\"onAllCheckedChange($event)\" />\n                        {{i18n.allCheckboxText()}}\n                </label>\n                <label *ngIf=\"config.isShowCollapseExpand\" class=\"pull-right label-collapse-expand\" (click)=\"toggleCollapseExpand()\">\n                    <i [title]=\"i18n.tooltipCollapseExpand(allItem.collapsed)\" aria-hidden=\"true\"\n                        class=\"fa\" [class.fa-expand]=\"allItem.collapsed\" [class.fa-compress]=\"!allItem.collapsed\"></i>\n                </label>\n            </div>\n        </div>\n        <div *ngIf=\"config.isShowFilter || config.isShowAllCheckBox || config.isShowCollapseExpand\" class=\"divider\"></div>\n    </div>\n</div>\n<div class=\"treeview-container\" [style.max-height.px]=\"maxHeight\">\n    <div *ngFor=\"let item of filterItems\">\n        <leo-treeview-item [item]=\"item\" [template]=\"template || tpl\" (checkedChange)=\"onItemCheckedChange(item, $event)\">\n        </leo-treeview-item>\n    </div>\n</div>\n<div *ngIf=\"!hasFilterItems\" class=\"treeview-text\">\n    {{i18n.filterNoItemsFoundText()}}\n</div>",
        styles: ["\n.row-margin {\n    margin-top: .3rem;\n}\n.label-item-all {\n}\n.label-collapse-expand {\n    margin: 0;\n    padding: 0 .3rem;\n    cursor: pointer;\n}\n.divider {\n    height: 1px;\n    margin: 0.5rem 0;\n    overflow: hidden;\n    background: #000;\n}\n.treeview-container {\n    overflow-x: hidden;\n    overflow-y: auto;\n    padding-right: 18px;\n}\n.treeview-text {\n    padding: .3rem 0;\n    white-space: nowrap;\n}\n"]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__treeview_i18n__["a" /* TreeviewI18n */],
        __WEBPACK_IMPORTED_MODULE_4__treeview_config__["a" /* TreeviewConfig */],
        __WEBPACK_IMPORTED_MODULE_5__treeview_event_parser__["a" /* TreeviewEventParser */]])
], TreeviewComponent);



/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__treeview_i18n__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__treeview_config__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__treeview_component__ = __webpack_require__(6);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DropdownTreeviewComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var DropdownTreeviewComponent = (function () {
    function DropdownTreeviewComponent(i18n, defaultConfig) {
        this.i18n = i18n;
        this.defaultConfig = defaultConfig;
        this.hide = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.selectedChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"](true);
        this.isOpen = false;
        this.config = this.defaultConfig;
    }
    DropdownTreeviewComponent.prototype.onKeyupEsc = function () {
        this.isOpen = false;
    };
    DropdownTreeviewComponent.prototype.onDocumentClick = function (event) {
        if (this.mouseEvent !== event) {
            this.isOpen = false;
        }
    };
    Object.defineProperty(DropdownTreeviewComponent.prototype, "hasItems", {
        get: function () {
            return !__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](this.items) && this.items.length > 0;
        },
        enumerable: true,
        configurable: true
    });
    DropdownTreeviewComponent.prototype.getText = function () {
        if (this.treeviewComponent) {
            return this.i18n.getText(this.treeviewComponent.checkedItems, this.treeviewComponent.allItem.checked);
        }
        return '';
    };
    DropdownTreeviewComponent.prototype.onSelectedChange = function (values) {
        this.selectedChange.emit(values);
    };
    DropdownTreeviewComponent.prototype.onButtonClick = function (event) {
        this.mouseEvent = event;
        this.isOpen = !this.isOpen;
        if (!this.isOpen) {
            this.hide.emit();
        }
    };
    return DropdownTreeviewComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["TemplateRef"])
], DropdownTreeviewComponent.prototype, "template", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", Array)
], DropdownTreeviewComponent.prototype, "items", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_3__treeview_config__["a" /* TreeviewConfig */])
], DropdownTreeviewComponent.prototype, "config", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], DropdownTreeviewComponent.prototype, "hide", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], DropdownTreeviewComponent.prototype, "selectedChange", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_4__treeview_component__["a" /* TreeviewComponent */]),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4__treeview_component__["a" /* TreeviewComponent */])
], DropdownTreeviewComponent.prototype, "treeviewComponent", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])('keyup.esc'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], DropdownTreeviewComponent.prototype, "onKeyupEsc", null);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])('document:click', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [MouseEvent]),
    __metadata("design:returntype", void 0)
], DropdownTreeviewComponent.prototype, "onDocumentClick", null);
DropdownTreeviewComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'leo-dropdown-treeview',
        template: "\n<div class=\"dropdown\" [class.show]=\"isOpen\">\n    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" role=\"button\" (click)=\"onButtonClick($event)\"\n        aria-haspopup=\"true\" aria-expanded=\"false\">\n        {{getText()}}\n    </button>\n    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" (click)=\"$event.stopPropagation()\">\n        <div class=\"dropdown-container\">\n            <leo-treeview [items]=\"items\" [template]=\"template\" [config]=\"config\" (selectedChange)=\"onSelectedChange($event)\">\n            </leo-treeview>\n        </div>\n    </div>\n</div>\n    ",
        styles: ["\n.dropdown {\n    width: 100%;\n    display: inline-block;\n}\n.dropdown button {\n    width: 100%;\n    margin-right: .9rem;\n    text-align: left;\n}\n.dropdown button::after {\n    position: absolute;\n    right: .6rem;\n    margin-top: .6rem;\n}\n.dropdown .dropdown-menu .row {\n    padding: 2px 10px;\n}\n.dropdown .dropdown-menu .dropdown-item-collapse-expand {\n    padding: 0;\n}\n.dropdown .dropdown-menu .dropdown-container {\n    padding: 0 .6rem;\n}\n    "]
    }),
    __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__treeview_i18n__["a" /* TreeviewI18n */],
        __WEBPACK_IMPORTED_MODULE_3__treeview_config__["a" /* TreeviewConfig */]])
], DropdownTreeviewComponent);



/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__treeview_item__ = __webpack_require__(4);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TreeviewPipe; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var TreeviewPipe = (function () {
    function TreeviewPipe() {
    }
    TreeviewPipe.prototype.transform = function (objects, textField) {
        if (__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](objects)) {
            return undefined;
        }
        return objects.map(function (object) { return new __WEBPACK_IMPORTED_MODULE_2__treeview_item__["a" /* TreeviewItem */]({ text: object[textField], value: object }); });
    };
    return TreeviewPipe;
}());
TreeviewPipe = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"])({
        name: 'leoTreeview'
    })
], TreeviewPipe);



/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__angular_forms__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__angular_common__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__dropdown_treeview_component__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__treeview_component__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__treeview_item_component__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__treeview_pipe__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__treeview_i18n__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__treeview_config__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__treeview_event_parser__ = __webpack_require__(5);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DropdownTreeviewModule; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};










var DropdownTreeviewModule = DropdownTreeviewModule_1 = (function () {
    function DropdownTreeviewModule() {
    }
    DropdownTreeviewModule.forRoot = function () {
        return {
            ngModule: DropdownTreeviewModule_1,
            providers: [
                __WEBPACK_IMPORTED_MODULE_8__treeview_config__["a" /* TreeviewConfig */],
                { provide: __WEBPACK_IMPORTED_MODULE_7__treeview_i18n__["a" /* TreeviewI18n */], useClass: __WEBPACK_IMPORTED_MODULE_7__treeview_i18n__["b" /* TreeviewI18nDefault */] },
                { provide: __WEBPACK_IMPORTED_MODULE_9__treeview_event_parser__["a" /* TreeviewEventParser */], useClass: __WEBPACK_IMPORTED_MODULE_9__treeview_event_parser__["b" /* DefaultTreeviewEventParser */] }
            ]
        };
    };
    return DropdownTreeviewModule;
}());
DropdownTreeviewModule = DropdownTreeviewModule_1 = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
        imports: [
            __WEBPACK_IMPORTED_MODULE_1__angular_forms__["FormsModule"],
            __WEBPACK_IMPORTED_MODULE_2__angular_common__["CommonModule"]
        ],
        declarations: [
            __WEBPACK_IMPORTED_MODULE_5__treeview_item_component__["a" /* TreeviewItemComponent */],
            __WEBPACK_IMPORTED_MODULE_3__dropdown_treeview_component__["a" /* DropdownTreeviewComponent */],
            __WEBPACK_IMPORTED_MODULE_4__treeview_component__["a" /* TreeviewComponent */],
            __WEBPACK_IMPORTED_MODULE_6__treeview_pipe__["a" /* TreeviewPipe */]
        ], exports: [
            __WEBPACK_IMPORTED_MODULE_3__dropdown_treeview_component__["a" /* DropdownTreeviewComponent */],
            __WEBPACK_IMPORTED_MODULE_4__treeview_component__["a" /* TreeviewComponent */],
            __WEBPACK_IMPORTED_MODULE_6__treeview_pipe__["a" /* TreeviewPipe */]
        ]
    })
], DropdownTreeviewModule);

var DropdownTreeviewModule_1;


/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TreeviewHelper; });

var TreeviewHelper = {
    findParent: findParent,
    removeItem: removeItem
};
function findParent(x, items) {
    for (var i = 0; i < items.length; i++) {
        var item = items[i];
        if (x === item) {
            return undefined;
        }
        if (item.children) {
            for (var j = 0; j < item.children.length; j++) {
                var child = item.children[j];
                if (x === child) {
                    return item;
                }
                else {
                    var parent_1 = findParent(x, item.children);
                    if (parent_1) {
                        return parent_1;
                    }
                }
            }
        }
    }
    return undefined;
}
function removeItem(x, items) {
    var parent = TreeviewHelper.findParent(x, items);
    if (parent) {
        __WEBPACK_IMPORTED_MODULE_0_lodash__["pull"](parent.children, x);
        if (parent.children.length === 0) {
            parent.children = undefined;
        }
        else {
            parent.correctChecked();
        }
    }
    else {
        __WEBPACK_IMPORTED_MODULE_0_lodash__["pull"](items, x);
    }
}


/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__treeview_item__ = __webpack_require__(4);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TreeviewItemComponent; });
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var TreeviewItemComponent = (function () {
    function TreeviewItemComponent() {
        var _this = this;
        this.checkedChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.toggleCollapseExpand = function () {
            _this.item.collapsed = !_this.item.collapsed;
        };
        this.onCheckedChange = function () {
            var checked = _this.item.checked;
            if (!__WEBPACK_IMPORTED_MODULE_1_lodash__["isNil"](_this.item.children)) {
                _this.item.children.forEach(function (child) { return child.setCheckedRecursive(checked); });
            }
            _this.checkedChange.emit(checked);
        };
    }
    TreeviewItemComponent.prototype.onChildCheckedChange = function (child, checked) {
        if (this.item.checked !== checked) {
            var itemChecked = true;
            for (var i = 0; i < this.item.children.length; i++) {
                if (!this.item.children[i].checked) {
                    itemChecked = false;
                    break;
                }
            }
            this.item.checked = itemChecked;
        }
        this.checkedChange.emit(checked);
    };
    return TreeviewItemComponent;
}());
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["TemplateRef"])
], TreeviewItemComponent.prototype, "template", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
    __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2__treeview_item__["a" /* TreeviewItem */])
], TreeviewItemComponent.prototype, "item", void 0);
__decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
    __metadata("design:type", Object)
], TreeviewItemComponent.prototype, "checkedChange", void 0);
TreeviewItemComponent = __decorate([
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
        selector: 'leo-treeview-item',
        template: "\n<div class=\"treeview-item\">\n    <template [ngTemplateOutlet]=\"template\"\n        [ngOutletContext]=\"{item: item, toggleCollapseExpand: toggleCollapseExpand, onCheckedChange: onCheckedChange}\">\n    </template>\n    <div *ngIf=\"!item.collapsed\">\n        <leo-treeview-item *ngFor=\"let child of item.children\" [item]=\"child\" [template]=\"template\"\n            (checkedChange)=\"onChildCheckedChange(child, $event)\">\n        </leo-treeview-item>\n    </div>\n</div>\n    ",
        styles: ["\n:host {\n    display: block;\n}\n:host /deep/ .fa {\n    margin-right: .2rem;\n    width: .5rem;\n    cursor: pointer;\n}\n.treeview-item {\n    white-space: nowrap;\n}\n.treeview-item .treeview-item {\n    margin-left: 2rem;\n}\n    "]
    })
], TreeviewItemComponent);



/***/ }),
/* 12 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_12__;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_13__;

/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_dropdown_treeview_module__ = __webpack_require__(9);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "DropdownTreeviewModule", function() { return __WEBPACK_IMPORTED_MODULE_0__src_dropdown_treeview_module__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_dropdown_treeview_component__ = __webpack_require__(7);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "DropdownTreeviewComponent", function() { return __WEBPACK_IMPORTED_MODULE_1__src_dropdown_treeview_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_treeview_component__ = __webpack_require__(6);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TreeviewComponent", function() { return __WEBPACK_IMPORTED_MODULE_2__src_treeview_component__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_treeview_pipe__ = __webpack_require__(8);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TreeviewPipe", function() { return __WEBPACK_IMPORTED_MODULE_3__src_treeview_pipe__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__src_treeview_item__ = __webpack_require__(4);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TreeviewItem", function() { return __WEBPACK_IMPORTED_MODULE_4__src_treeview_item__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__src_treeview_config__ = __webpack_require__(2);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TreeviewConfig", function() { return __WEBPACK_IMPORTED_MODULE_5__src_treeview_config__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__src_treeview_i18n__ = __webpack_require__(3);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TreeviewI18n", function() { return __WEBPACK_IMPORTED_MODULE_6__src_treeview_i18n__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TreeviewI18nDefault", function() { return __WEBPACK_IMPORTED_MODULE_6__src_treeview_i18n__["b"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__src_treeview_event_parser__ = __webpack_require__(5);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TreeviewEventParser", function() { return __WEBPACK_IMPORTED_MODULE_7__src_treeview_event_parser__["a"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "DefaultTreeviewEventParser", function() { return __WEBPACK_IMPORTED_MODULE_7__src_treeview_event_parser__["b"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "DownlineTreeviewEventParser", function() { return __WEBPACK_IMPORTED_MODULE_7__src_treeview_event_parser__["c"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "OrderDownlineTreeviewEventParser", function() { return __WEBPACK_IMPORTED_MODULE_7__src_treeview_event_parser__["d"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__src_treeview_helper__ = __webpack_require__(10);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "TreeviewHelper", function() { return __WEBPACK_IMPORTED_MODULE_8__src_treeview_helper__["a"]; });











/***/ })
/******/ ]);
});
//# sourceMappingURL=ng2-dropdown-treeview.umd.js.map